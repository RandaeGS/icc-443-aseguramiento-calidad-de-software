services:
  api:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: api
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy
    environment:
      - QUARKUS_PROFILE=prod
      - DB_HOST=postgres
      - DB_NAME=production
      - DB_USER=${DB_USER:-prod}
      - DB_PASSWORD=${DB_PASSWORD}
      - KEYCLOAK_URL=http://keycloak:8080/realms/project
    ports:
      - "8080:8080"
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8080/productos" ]
      interval: 15s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    depends_on:
      - api
    environment:
      - VITE_API_URL=http://localhost:8080
      - VITE_KEYCLOAK_URL=http://localhost:7080/realms/project
    ports:
      - "5173:5173"
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:5173" ]
      interval: 15s
      timeout: 5s
      retries: 5

  postgres:
    image: postgres:16
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${DB_USER:-prod}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: production
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/production:/docker-entrypoint-initdb.d
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-prod} -d production"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:26.3
    container_name: keycloak
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/production
      KC_DB_USERNAME: ${DB_USER:-prod}
      KC_DB_PASSWORD: ${DB_PASSWORD}
      KC_DB_SCHEMA: keycloak
      KC_HOSTNAME_STRICT: false
      KC_HTTP_ENABLED: true
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN:-admin}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
    ports:
      - "7080:8080"
    command: start
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health/ready"]
      interval: 15s
      timeout: 5s
      retries: 5

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data:
